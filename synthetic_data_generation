{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10716,"sourceType":"modelInstanceVersion","isSourceIdPinned":false,"modelInstanceId":8658,"modelId":1445}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"## Part 1 - Synthetic Dataset Generation","metadata":{}},{"cell_type":"code","source":"!pip install -q transformers torch","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T21:12:09.823125Z","iopub.execute_input":"2025-07-24T21:12:09.824069Z","iopub.status.idle":"2025-07-24T21:13:44.110428Z","shell.execute_reply.started":"2025-07-24T21:12:09.824035Z","shell.execute_reply":"2025-07-24T21:13:44.108801Z"}},"outputs":[{"name":"stdout","text":"\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m91.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m72.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m32.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m1.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m23.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m7.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m85.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25h","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"import time\nimport json\nimport re\nfrom transformers import AutoTokenizer, AutoModelForCausalLM, pipeline\nimport torch\nimport pandas as pd","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T21:13:44.113622Z","iopub.execute_input":"2025-07-24T21:13:44.114039Z","iopub.status.idle":"2025-07-24T21:14:19.789508Z","shell.execute_reply.started":"2025-07-24T21:13:44.113976Z","shell.execute_reply":"2025-07-24T21:14:19.788411Z"}},"outputs":[{"name":"stderr","text":"2025-07-24 21:14:01.828354: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\nWARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nE0000 00:00:1753391642.098353      36 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\nE0000 00:00:1753391642.178463      36 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n","output_type":"stream"}],"execution_count":2},{"cell_type":"code","source":"# Path to the locally mounted model\nmodel_path = '/kaggle/input/phi/transformers/2/1'\n\n# Load tokenizer and model from local files\ntokenizer = AutoTokenizer.from_pretrained(model_path, local_files_only=True)\ntorch_dtype=torch.bfloat16\nmodel = AutoModelForCausalLM.from_pretrained(\n    model_path, \n    local_files_only=True, \n    device_map=\"auto\", \n    torch_dtype=torch.bfloat16)\n\ngenerator = pipeline(\n    \"text-generation\", \n    model=model, \n    tokenizer=tokenizer, \n    device_map=\"auto\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T21:14:19.790924Z","iopub.execute_input":"2025-07-24T21:14:19.791673Z","iopub.status.idle":"2025-07-24T21:14:46.507639Z","shell.execute_reply.started":"2025-07-24T21:14:19.791633Z","shell.execute_reply":"2025-07-24T21:14:46.506710Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]","application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9eb7ceec79c64ba8b46407b2e80fc10a"}},"metadata":{}},{"name":"stderr","text":"Device set to use cpu\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"# Method to parse output of mistral, which is a giant string of json\ndef parse_json_from_output(text):\n    try:\n        return json.loads(text)\n    except json.JSONDecodeError:\n        # Try to extract just the JSON block\n        json_str_match = re.search(r\"\\[.*?\\]\", text, re.DOTALL)\n        if json_str_match:\n            try:\n                return json.loads(json_str_match.group(0))\n            except json.JSONDecodeError:\n                return []\n        else:\n            return []\n\ndef parse_json_from_output(text):\n    try:\n        start = text.index(\"[\")\n        end = text.rindex(\"]\") + 1\n        return json.loads(text[start:end])\n    except Exception as e:\n        print(\"Failed to parse JSON:\", e)\n        return []","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T21:14:46.510024Z","iopub.execute_input":"2025-07-24T21:14:46.510531Z","iopub.status.idle":"2025-07-24T21:14:46.516440Z","shell.execute_reply.started":"2025-07-24T21:14:46.510504Z","shell.execute_reply":"2025-07-24T21:14:46.515599Z"}},"outputs":[],"execution_count":4},{"cell_type":"code","source":"prompt = \"\"\"\nYou are a helpful assistant.\n\nOutput a **valid JSON array only**. Do not include any explanation or text outside the array.\n\nGenerate 5 fictional businesses. Each item must include:\n- \"business_description\": a one-sentence description\n- \"domain_name\": a plausible and unique domain name\n\nOutput format:\n[\n  {\"business_description\": \"...\", \"domain_name\": \"...\"},\n  ...\n]\n\"\"\"\nprompt = \"\"\"\nYou are a helpful assistant. Generate exactly 5 fictional business entries in the following JSON format:\n\n[\n  {\n    \"business_description\": \"A mobile app that helps people find local farmers markets.\",\n    \"domain_name\": \"freshfinds.app\"\n  },\n  {\n    \"business_description\": \"An online subscription service for eco-friendly cleaning supplies.\",\n    \"domain_name\": \"greenbundle.com\"\n  },\n  ...\n]\n\nOutput a **valid JSON array only**. Do not include any explanation or text outside the array. Ensure all domain names are realistic and match the description.\n\"\"\"\n\nall_data = []\nfor i in range(1):  # or however many batches you want\n    start = time.time()\n\n    output = generator(\n        prompt,\n        max_new_tokens=400,\n        do_sample=True,\n        temperature=0.8,\n        return_full_text=False\n    )[0][\"generated_text\"]\n    print(output)\n    records = parse_json_from_output(output)\n    all_data.extend(records)\n\n    duration = time.time() - start\n    print(f\"Batch {i+1} took {duration:.2f} seconds and generated {len(records)} records.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T21:14:46.517166Z","iopub.execute_input":"2025-07-24T21:14:46.517450Z","iopub.status.idle":"2025-07-24T21:17:06.190906Z","shell.execute_reply.started":"2025-07-24T21:14:46.517427Z","shell.execute_reply":"2025-07-24T21:17:06.189669Z"}},"outputs":[{"name":"stderr","text":"Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.\n","output_type":"stream"},{"name":"stdout","text":"## INPUT\n\n##OUTPUT\n[\n  {\n    \"business_description\": \"A mobile app that connects users with pet sitters in their area.\",\n    \"domain_name\": \"petsitters.com\"\n  },\n  {\n    \"business_description\": \"A subscription service for personalized meal planning based on dietary restrictions.\",\n    \"domain_name\": \"mealdiet.com\"\n  },\n  {\n    \"business_description\": \"A platform for booking yoga and meditation classes in different cities.\",\n    \"domain_name\": \"mindful.com\"\n  },\n  {\n    \"business_description\": \"An online store for second-hand clothing and accessories.\",\n    \"domain_name\": \"thriftify.com\"\n  },\n  {\n    \"business_description\": \"A mobile app that helps users track their water intake and reminds them to stay hydrated.\",\n    \"domain_name\": \"waterlogged.com\"\n  }\n]\n\nBatch 1 took 139.62 seconds and generated 5 records.\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"df_all = pd.DataFrame(all_data).drop_duplicates(subset=\"domain_name\")\ndf_all.to_csv(\"domain_names_with_descriptions.csv\", index=False)\ndf_all.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-24T21:17:06.192276Z","iopub.execute_input":"2025-07-24T21:17:06.192753Z","iopub.status.idle":"2025-07-24T21:17:06.255386Z","shell.execute_reply.started":"2025-07-24T21:17:06.192709Z","shell.execute_reply":"2025-07-24T21:17:06.254438Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"                                business_description      domain_name\n0  A mobile app that connects users with pet sitt...   petsitters.com\n1  A subscription service for personalized meal p...     mealdiet.com\n2  A platform for booking yoga and meditation cla...      mindful.com\n3  An online store for second-hand clothing and a...    thriftify.com\n4  A mobile app that helps users track their wate...  waterlogged.com","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>business_description</th>\n      <th>domain_name</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>A mobile app that connects users with pet sitt...</td>\n      <td>petsitters.com</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>A subscription service for personalized meal p...</td>\n      <td>mealdiet.com</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>A platform for booking yoga and meditation cla...</td>\n      <td>mindful.com</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>An online store for second-hand clothing and a...</td>\n      <td>thriftify.com</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>A mobile app that helps users track their wate...</td>\n      <td>waterlogged.com</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}